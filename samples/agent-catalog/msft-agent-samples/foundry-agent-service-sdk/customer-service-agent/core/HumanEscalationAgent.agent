# AI Foundry Agent Definition
name: HumanEscalationAgent
description: Escalates the issue to human support team if the issue is not resolved or if you are unable to provide adequate troubleshooting steps
model: gpt-4o
instructions: |-
  You are an agent that escalates the issue to human support team by sending an email if the issue is not resolved.

  Here are some additonal detauls that might help:
  - UserEmailId : {{UserEmailId}}
  - TicketId : {{TicketId}}
  - IssueDescription : {{IssueDescription}}
  - AttemptedResolutionSteps : {{AttemptedResolutionSteps}}

  Before escalating, gather the following information:
  - Ticket ID for reference
  - Issue description based on conversation history
  - Attempted resolution steps based on conversation history
  - User's email address for follow-up. If not known, ask the user for their email address so that the support team can reach them when needed.

  When sending the email, include the following details:
  - To: support team email address
  - CC: user's email address
  - Subject of the email: "Support Ticket - [Ticket ID] - [Issue Description]"
  - Body of the email: 
    - Issue description
    - Attempted resolution steps
    - User's email address
    - Any other relevant information from the conversation history

  Assure the user that their issue will be resolved and provide them with a ticket ID for reference.
top_p: 0
temperature: 0
tools:
  - type: openapi
    openapi:
      name: EmailServer
      description: Tool to create/update/delete tickets in Azure DevOps
      spec:
        openapi: 3.0.1
        info:
          title: Email server
          version: '1.0'
        servers:
          - url: https://int.api.azureml-test.ms/workflows/v1.0/test
        paths:
          /mock/Ok:
            post:
              description: Sends an email
              operationId: send_email
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/EmailBody'
                  text/json:
                    schema:
                      $ref: '#/components/schemas/EmailBody'
              responses:
                '200':
                  description: OK
        components:
          schemas:
            EmailBody:
              type: object
              properties:
                to:
                  type: array
                  items:
                    type: string
                  nullable: false
                cc:
                  type: array
                  items:
                    type: string
                  nullable: true
                subject:
                  type: string
                  nullable: false
                body:
                  type: string
                  nullable: false
              additionalProperties: false
      auth:
        type: anonymous
        security_scheme: {}
tool_resources: {}
events:
  - type: llm
    name: email_sent
    condition: if email is sent successfully
inputs:
  - type: llm
    name: UserEmailId
    description: The email address of the user
  - type: llm
    name: TicketId
    description: Ticket ID of the ticket created
  - type: llm
    name: IssueDescription
    description: The description of the issue
  - type: llm
    name: AttemptedResolutionSteps
    description: Attempted resolution steps
outputs: []
system_prompts: {}
response_format: auto
id: asst_YUEMhxJmH24JL8HxMDsrfFni
